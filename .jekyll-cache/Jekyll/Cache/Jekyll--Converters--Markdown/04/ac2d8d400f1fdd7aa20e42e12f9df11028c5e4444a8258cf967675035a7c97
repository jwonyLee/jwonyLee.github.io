I"<h1 id="defer가-호출되는-순서는-어떻게-되고-defer가-호출되지-않는-경우를-설명하시오">defer가 호출되는 순서는 어떻게 되고, defer가 호출되지 않는 경우를 설명하시오.</h1>

<h2 id="defer가-호출되는-순서">defer가 호출되는 순서</h2>

<ul>
  <li>defer가 하나만 선언되어 있다면, 해당 구문이 끝나는 시점에 실행된다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">testDefer</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">defer</span> <span class="p">{</span>
		<span class="nf">print</span><span class="p">(</span><span class="s">"run defer"</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="nf">print</span><span class="p">(</span><span class="s">"testDefer"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">testDefer</span>
<span class="n">run</span> <span class="k">defer</span>
</code></pre></div></div>

<ul>
  <li>한 구문 내에 defer가 여러개 선언되어 있다면, 선언한 순서에 역순으로 실행된다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">func</span> <span class="nf">testDefer</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">defer</span> <span class="p">{</span>
		<span class="nf">print</span><span class="p">(</span><span class="s">"run 1"</span><span class="p">)</span>
	<span class="p">}</span>
	
	<span class="k">defer</span> <span class="p">{</span>
		<span class="nf">print</span><span class="p">(</span><span class="s">"run 2"</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">defer</span> <span class="p">{</span>
		<span class="nf">print</span><span class="p">(</span><span class="s">"run 3"</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="nf">print</span><span class="p">(</span><span class="s">"end"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">end</span>
<span class="n">run</span> <span class="mi">3</span>
<span class="n">run</span> <span class="mi">2</span>
<span class="n">run</span> <span class="mi">1</span>
</code></pre></div></div>

<h2 id="defer가-호출되지-않는-경우">defer가 호출되지 않는 경우</h2>

<ol>
  <li><code class="language-plaintext highlighter-rouge">throw</code> 를 이용해서 오류를 던질 경우
중간에 <code class="language-plaintext highlighter-rouge">throw</code> 가 발생해서 함수가 종료될 경우 아래에 선언된 <code class="language-plaintext highlighter-rouge">defer</code>에 도달하지 못해 함수가 종료 되어도 <code class="language-plaintext highlighter-rouge">defer</code>가 호출되지 않음</li>
  <li><code class="language-plaintext highlighter-rouge">guard</code> 문을 사용하여 중간에 함수를 종료하는 경우
<code class="language-plaintext highlighter-rouge">throw</code> 의 경우와 비슷함</li>
  <li>리턴값이 <code class="language-plaintext highlighter-rouge">Never</code>(비반환함수)인 경우
에러가 발생하면서 함수를 반환하지 않고 실행을 종료하기 때문에 <code class="language-plaintext highlighter-rouge">defer</code> 가 호출되지 않음</li>
</ol>

<hr />

<h2 id="참고-자료">참고 자료</h2>

<ul>
  <li><a href="https://swieeft.github.io/2020/02/26/defer.html">defer 구문 알아보기 - 뀔뀔(swieeft)의 개발새발기</a></li>
</ul>
:ET